{"version":3,"sources":["logo.svg","components/PaymentRequest.js","components/MyStoreCheckout.js","components/StripeProviderHolder.js","App.js","reportWebVitals.js","index.js"],"names":["PaymentRequestForm","props","paymentRequest","stripe","country","currency","total","label","amount","on","complete","token","data","console","log","canMakePayment","then","result","setState","state","this","className","style","paymentRequestButton","theme","height","React","Component","injectStripe","MyStoreCheckout","StripeProviderHolder","apiKey","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,I,uDCITA,E,kDACF,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GAIN,IAAMC,EAAiBD,EAAME,OAAOD,eAAe,CACjDE,QAAS,KACTC,SAAU,MACVC,MAAO,CACLC,MAAO,aACPC,OAAQ,OAVK,OAcjBN,EAAeO,GAAG,SAAS,YAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,MAAUC,EAAU,oCACzDC,QAAQC,IAAI,0BAA2BH,GACvCE,QAAQC,IAAI,kCAAmCF,GAC/CF,EAAS,cAGXR,EAAea,iBAAiBC,MAAK,SAACC,GACpC,EAAKC,SAAS,CAACH,iBAAkBE,OAGnC,EAAKE,MAAQ,CACXJ,gBAAgB,EAChBb,kBA1Be,E,0CA8BnB,WACE,OAAOkB,KAAKD,MAAMJ,eAChB,cAAC,8BAAD,CACEb,eAAgBkB,KAAKD,MAAMjB,eAC3BmB,UAAU,uBACVC,MAAO,CAGLC,qBAAsB,CACpBC,MAAO,QACPC,OAAQ,WAIZ,S,GA7CuBC,IAAMC,WAgDtBC,yBAAa5B,GCpCf6B,E,4JATb,WACE,OACE,cAAC,WAAD,UACE,cAAC,EAAD,U,GAJsBH,IAAMC,WCOrBG,E,4JARX,WACI,OACI,cAAC,iBAAD,CAAgBC,OAAO,8GAAvB,SACI,cAAC,EAAD,U,GAJmBL,IAAMC,WCO1BK,MAPf,WAEE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ddcc7dac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport {PaymentRequestButtonElement} from 'react-stripe-elements';\nimport {injectStripe} from 'react-stripe-elements';\n\nclass PaymentRequestForm extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      // For full documentation of the available paymentRequest options, see:\n      // https://stripe.com/docs/stripe.js#the-payment-request-object\n      const paymentRequest = props.stripe.paymentRequest({\n        country: 'US',\n        currency: 'usd',\n        total: {\n          label: 'Demo total',\n          amount: 1000,\n        },\n      });\n  \n      paymentRequest.on('token', ({complete, token, ...data}) => {\n        console.log('Received Stripe token: ', token);\n        console.log('Received customer information: ', data);\n        complete('success');\n      });\n  \n      paymentRequest.canMakePayment().then((result) => {\n        this.setState({canMakePayment: !!result});\n      });\n  \n      this.state = {\n        canMakePayment: false,\n        paymentRequest,\n      };\n    }\n  \n    render() {\n      return this.state.canMakePayment ? (\n        <PaymentRequestButtonElement\n          paymentRequest={this.state.paymentRequest}\n          className=\"PaymentRequestButton\"\n          style={{\n            // For more details on how to style the Payment Request Button, see:\n            // https://stripe.com/docs/elements/payment-request-button#styling-the-element\n            paymentRequestButton: {\n              theme: 'light',\n              height: '64px',\n            },\n          }}\n        />\n      ) : null;\n    }\n  }\n  export default injectStripe(PaymentRequestForm);","// MyStoreCheckout.js\nimport React from 'react';\nimport {Elements} from 'react-stripe-elements';\n\nimport InjectedCheckoutForm from './PaymentRequest';\n\nclass MyStoreCheckout extends React.Component {\n  render() {\n    return (\n      <Elements>\n        <InjectedCheckoutForm />\n      </Elements>\n    );\n  }\n}\n\nexport default MyStoreCheckout;","import React from 'react'\nimport { StripeProvider } from 'react-stripe-elements';\nimport MyStoreCheckout from './MyStoreCheckout';\n\nclass StripeProviderHolder extends React.Component {\n    render() {\n        return (\n            <StripeProvider apiKey=\"pk_test_51IlHEuDwnViOHl4M4992ZPFENwM7cSjR9R2b8WJm1zFHjjwsAU5xX5sfSE9BHouSIP8a7VXhSByzHDdBiXitaj3600zwIV4p22\">\n                <MyStoreCheckout />\n            </StripeProvider>\n        );\n    }\n}\nexport default StripeProviderHolder;\n","import logo from './logo.svg';\nimport './App.css';\nimport StripeProviderHolder from './components/StripeProviderHolder';\n\nfunction App() {\n  \n  return (\n    <StripeProviderHolder />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}